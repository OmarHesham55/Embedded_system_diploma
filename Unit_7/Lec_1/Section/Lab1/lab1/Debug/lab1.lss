
lab1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000011e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000172  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000172  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000715  00000000  00000000  00000200  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058b  00000000  00000000  00000915  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002de  00000000  00000000  00000ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001180  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000315  00000000  00000000  000011a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  000014b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001621  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 8d 00 	jmp	0x11a	; 0x11a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


int main(void)
{
	//PORTA pins ====> Output
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	while (1)
	{
			SET_BIT(PORTA,0);
  70:	8b b3       	in	r24, 0x1b	; 27
  72:	81 60       	ori	r24, 0x01	; 1
  74:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  76:	2f ef       	ldi	r18, 0xFF	; 255
  78:	80 e7       	ldi	r24, 0x70	; 112
  7a:	92 e0       	ldi	r25, 0x02	; 2
  7c:	21 50       	subi	r18, 0x01	; 1
  7e:	80 40       	sbci	r24, 0x00	; 0
  80:	90 40       	sbci	r25, 0x00	; 0
  82:	e1 f7       	brne	.-8      	; 0x7c <main+0x10>
  84:	00 c0       	rjmp	.+0      	; 0x86 <main+0x1a>
  86:	00 00       	nop
			_delay_ms(100);
			SET_BIT(PORTA,1);
  88:	8b b3       	in	r24, 0x1b	; 27
  8a:	82 60       	ori	r24, 0x02	; 2
  8c:	8b bb       	out	0x1b, r24	; 27
  8e:	2f ef       	ldi	r18, 0xFF	; 255
  90:	80 e7       	ldi	r24, 0x70	; 112
  92:	92 e0       	ldi	r25, 0x02	; 2
  94:	21 50       	subi	r18, 0x01	; 1
  96:	80 40       	sbci	r24, 0x00	; 0
  98:	90 40       	sbci	r25, 0x00	; 0
  9a:	e1 f7       	brne	.-8      	; 0x94 <main+0x28>
  9c:	00 c0       	rjmp	.+0      	; 0x9e <main+0x32>
  9e:	00 00       	nop
			_delay_ms(100);
			SET_BIT(PORTA,2);
  a0:	8b b3       	in	r24, 0x1b	; 27
  a2:	84 60       	ori	r24, 0x04	; 4
  a4:	8b bb       	out	0x1b, r24	; 27
  a6:	2f ef       	ldi	r18, 0xFF	; 255
  a8:	80 e7       	ldi	r24, 0x70	; 112
  aa:	92 e0       	ldi	r25, 0x02	; 2
  ac:	21 50       	subi	r18, 0x01	; 1
  ae:	80 40       	sbci	r24, 0x00	; 0
  b0:	90 40       	sbci	r25, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x40>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x4a>
  b6:	00 00       	nop
			_delay_ms(100);
			SET_BIT(PORTA,3);
  b8:	8b b3       	in	r24, 0x1b	; 27
  ba:	88 60       	ori	r24, 0x08	; 8
  bc:	8b bb       	out	0x1b, r24	; 27
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	80 e7       	ldi	r24, 0x70	; 112
  c2:	92 e0       	ldi	r25, 0x02	; 2
  c4:	21 50       	subi	r18, 0x01	; 1
  c6:	80 40       	sbci	r24, 0x00	; 0
  c8:	90 40       	sbci	r25, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x58>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x62>
  ce:	00 00       	nop
			_delay_ms(100);
			SET_BIT(PORTA,4);
  d0:	8b b3       	in	r24, 0x1b	; 27
  d2:	80 61       	ori	r24, 0x10	; 16
  d4:	8b bb       	out	0x1b, r24	; 27
  d6:	2f ef       	ldi	r18, 0xFF	; 255
  d8:	80 e7       	ldi	r24, 0x70	; 112
  da:	92 e0       	ldi	r25, 0x02	; 2
  dc:	21 50       	subi	r18, 0x01	; 1
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	90 40       	sbci	r25, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x70>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x7a>
  e6:	00 00       	nop
			_delay_ms(100);
			CLEAR_BIT(PORTA,0);
  e8:	8b b3       	in	r24, 0x1b	; 27
  ea:	8e 7f       	andi	r24, 0xFE	; 254
  ec:	8b bb       	out	0x1b, r24	; 27
			CLEAR_BIT(PORTA,1);
  ee:	8b b3       	in	r24, 0x1b	; 27
  f0:	8d 7f       	andi	r24, 0xFD	; 253
  f2:	8b bb       	out	0x1b, r24	; 27
			CLEAR_BIT(PORTA,2);
  f4:	8b b3       	in	r24, 0x1b	; 27
  f6:	8b 7f       	andi	r24, 0xFB	; 251
  f8:	8b bb       	out	0x1b, r24	; 27
			CLEAR_BIT(PORTA,3);
  fa:	8b b3       	in	r24, 0x1b	; 27
  fc:	87 7f       	andi	r24, 0xF7	; 247
  fe:	8b bb       	out	0x1b, r24	; 27
			CLEAR_BIT(PORTA,4);
 100:	8b b3       	in	r24, 0x1b	; 27
 102:	8f 7e       	andi	r24, 0xEF	; 239
 104:	8b bb       	out	0x1b, r24	; 27
 106:	2f ef       	ldi	r18, 0xFF	; 255
 108:	80 e7       	ldi	r24, 0x70	; 112
 10a:	92 e0       	ldi	r25, 0x02	; 2
 10c:	21 50       	subi	r18, 0x01	; 1
 10e:	80 40       	sbci	r24, 0x00	; 0
 110:	90 40       	sbci	r25, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0xa0>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0xaa>
 116:	00 00       	nop
 118:	ab cf       	rjmp	.-170    	; 0x70 <main+0x4>

0000011a <_exit>:
 11a:	f8 94       	cli

0000011c <__stop_program>:
 11c:	ff cf       	rjmp	.-2      	; 0x11c <__stop_program>
