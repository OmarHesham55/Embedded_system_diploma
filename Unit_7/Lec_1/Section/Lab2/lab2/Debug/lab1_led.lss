
lab1_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000172  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000234  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007f7  00000000  00000000  00000254  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000570  00000000  00000000  00000a4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002e9  00000000  00000000  00000fbb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000012a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000031d  00000000  00000000  000012c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002d0  00000000  00000000  000015e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000018b5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 b7 00 	jmp	0x16e	; 0x16e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:

		
int main(void)
{
	//PORTA pins ====> Output
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26

	//PORTD as Input Port
	DDRD = 0;
  70:	11 ba       	out	0x11, r1	; 17
	PORTD = 0xFF;	// Making PORTD Pull-Up
  72:	82 bb       	out	0x12, r24	; 18
	/* Replace with your application code */
while (1)
	{
		if (READ_BIT(PIND,2)==0)
  74:	82 99       	sbic	0x10, 2	; 16
  76:	79 c0       	rjmp	.+242    	; 0x16a <main+0xfe>
		{			
				SET_BIT(PORTA,0);
  78:	8b b3       	in	r24, 0x1b	; 27
  7a:	81 60       	ori	r24, 0x01	; 1
  7c:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	2f ef       	ldi	r18, 0xFF	; 255
  80:	80 e7       	ldi	r24, 0x70	; 112
  82:	92 e0       	ldi	r25, 0x02	; 2
  84:	21 50       	subi	r18, 0x01	; 1
  86:	80 40       	sbci	r24, 0x00	; 0
  88:	90 40       	sbci	r25, 0x00	; 0
  8a:	e1 f7       	brne	.-8      	; 0x84 <main+0x18>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
				_delay_ms(100);
				SET_BIT(PORTA,1);
  90:	8b b3       	in	r24, 0x1b	; 27
  92:	82 60       	ori	r24, 0x02	; 2
  94:	8b bb       	out	0x1b, r24	; 27
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	80 e7       	ldi	r24, 0x70	; 112
  9a:	92 e0       	ldi	r25, 0x02	; 2
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <main+0x30>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <main+0x3a>
  a6:	00 00       	nop
				_delay_ms(100);
				SET_BIT(PORTA,2);
  a8:	8b b3       	in	r24, 0x1b	; 27
  aa:	84 60       	ori	r24, 0x04	; 4
  ac:	8b bb       	out	0x1b, r24	; 27
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	80 e7       	ldi	r24, 0x70	; 112
  b2:	92 e0       	ldi	r25, 0x02	; 2
  b4:	21 50       	subi	r18, 0x01	; 1
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	90 40       	sbci	r25, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x48>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <main+0x52>
  be:	00 00       	nop
				_delay_ms(100);
				SET_BIT(PORTA,3);
  c0:	8b b3       	in	r24, 0x1b	; 27
  c2:	88 60       	ori	r24, 0x08	; 8
  c4:	8b bb       	out	0x1b, r24	; 27
  c6:	2f ef       	ldi	r18, 0xFF	; 255
  c8:	80 e7       	ldi	r24, 0x70	; 112
  ca:	92 e0       	ldi	r25, 0x02	; 2
  cc:	21 50       	subi	r18, 0x01	; 1
  ce:	80 40       	sbci	r24, 0x00	; 0
  d0:	90 40       	sbci	r25, 0x00	; 0
  d2:	e1 f7       	brne	.-8      	; 0xcc <main+0x60>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <main+0x6a>
  d6:	00 00       	nop
				_delay_ms(100);
				SET_BIT(PORTA,4);
  d8:	8b b3       	in	r24, 0x1b	; 27
  da:	80 61       	ori	r24, 0x10	; 16
  dc:	8b bb       	out	0x1b, r24	; 27
  de:	2f ef       	ldi	r18, 0xFF	; 255
  e0:	80 e7       	ldi	r24, 0x70	; 112
  e2:	92 e0       	ldi	r25, 0x02	; 2
  e4:	21 50       	subi	r18, 0x01	; 1
  e6:	80 40       	sbci	r24, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x78>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x82>
  ee:	00 00       	nop
				_delay_ms(100);
				CLEAR_BIT(PORTA,4);
  f0:	8b b3       	in	r24, 0x1b	; 27
  f2:	8f 7e       	andi	r24, 0xEF	; 239
  f4:	8b bb       	out	0x1b, r24	; 27
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	80 e7       	ldi	r24, 0x70	; 112
  fa:	92 e0       	ldi	r25, 0x02	; 2
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	80 40       	sbci	r24, 0x00	; 0
 100:	90 40       	sbci	r25, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x90>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x9a>
 106:	00 00       	nop
				_delay_ms(100);
				CLEAR_BIT(PORTA,3);
 108:	8b b3       	in	r24, 0x1b	; 27
 10a:	87 7f       	andi	r24, 0xF7	; 247
 10c:	8b bb       	out	0x1b, r24	; 27
 10e:	2f ef       	ldi	r18, 0xFF	; 255
 110:	80 e7       	ldi	r24, 0x70	; 112
 112:	92 e0       	ldi	r25, 0x02	; 2
 114:	21 50       	subi	r18, 0x01	; 1
 116:	80 40       	sbci	r24, 0x00	; 0
 118:	90 40       	sbci	r25, 0x00	; 0
 11a:	e1 f7       	brne	.-8      	; 0x114 <main+0xa8>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <main+0xb2>
 11e:	00 00       	nop
				_delay_ms(100);
				CLEAR_BIT(PORTA,2);
 120:	8b b3       	in	r24, 0x1b	; 27
 122:	8b 7f       	andi	r24, 0xFB	; 251
 124:	8b bb       	out	0x1b, r24	; 27
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	80 e7       	ldi	r24, 0x70	; 112
 12a:	92 e0       	ldi	r25, 0x02	; 2
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <main+0xc0>
 134:	00 c0       	rjmp	.+0      	; 0x136 <main+0xca>
 136:	00 00       	nop
				_delay_ms(100);
				CLEAR_BIT(PORTA,1);
 138:	8b b3       	in	r24, 0x1b	; 27
 13a:	8d 7f       	andi	r24, 0xFD	; 253
 13c:	8b bb       	out	0x1b, r24	; 27
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	80 e7       	ldi	r24, 0x70	; 112
 142:	92 e0       	ldi	r25, 0x02	; 2
 144:	21 50       	subi	r18, 0x01	; 1
 146:	80 40       	sbci	r24, 0x00	; 0
 148:	90 40       	sbci	r25, 0x00	; 0
 14a:	e1 f7       	brne	.-8      	; 0x144 <main+0xd8>
 14c:	00 c0       	rjmp	.+0      	; 0x14e <main+0xe2>
 14e:	00 00       	nop
				_delay_ms(100);
				CLEAR_BIT(PORTA,0);
 150:	8b b3       	in	r24, 0x1b	; 27
 152:	8e 7f       	andi	r24, 0xFE	; 254
 154:	8b bb       	out	0x1b, r24	; 27
 156:	2f ef       	ldi	r18, 0xFF	; 255
 158:	80 e7       	ldi	r24, 0x70	; 112
 15a:	92 e0       	ldi	r25, 0x02	; 2
 15c:	21 50       	subi	r18, 0x01	; 1
 15e:	80 40       	sbci	r24, 0x00	; 0
 160:	90 40       	sbci	r25, 0x00	; 0
 162:	e1 f7       	brne	.-8      	; 0x15c <main+0xf0>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0xfa>
 166:	00 00       	nop
 168:	85 cf       	rjmp	.-246    	; 0x74 <main+0x8>
				_delay_ms(100);


		}
		else{
			PORTA = 0x00;
 16a:	1b ba       	out	0x1b, r1	; 27
 16c:	83 cf       	rjmp	.-250    	; 0x74 <main+0x8>

0000016e <_exit>:
 16e:	f8 94       	cli

00000170 <__stop_program>:
 170:	ff cf       	rjmp	.-2      	; 0x170 <__stop_program>
